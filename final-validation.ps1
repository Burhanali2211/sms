# Final Validation Script
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "FINAL PROJECT VALIDATION" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

$errors = 0

# Check that mockData.ts is deleted
Write-Host "üîç Checking for deleted mock files..." -ForegroundColor Cyan
if (Test-Path "src\utils\mockData.ts") {
    Write-Host "‚ùå mockData.ts still exists" -ForegroundColor Red
    $errors++
} else {
    Write-Host "‚úÖ mockData.ts successfully deleted" -ForegroundColor Green
}

# Check that build works
Write-Host ""
Write-Host "üîç Checking build status..." -ForegroundColor Cyan
if (Test-Path "dist") {
    $distItems = (Get-ChildItem "dist" -Recurse | Measure-Object).Count
    if ($distItems -gt 0) {
        Write-Host "‚úÖ Build successful with $distItems items in dist folder" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  Dist folder exists but is empty" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ùå Dist folder not found - build may have failed" -ForegroundColor Red
    $errors++
}

# Summary
Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "FINAL VALIDATION SUMMARY" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan

if ($errors -eq 0) {
    Write-Host "üéâ ALL VALIDATIONS PASSED!" -ForegroundColor Green
    Write-Host "‚úÖ Project is clean and production-ready" -ForegroundColor Green
    Write-Host "‚úÖ Build completed successfully" -ForegroundColor Green
} else {
    Write-Host "‚ùå $errors validation errors found" -ForegroundColor Red
}

Write-Host "========================================" -ForegroundColor Cyan